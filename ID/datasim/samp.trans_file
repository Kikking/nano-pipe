#####################################################
How to get random sequences for simulation:
#####################################################


file obtained from: https://ftp.ensembl.org/pub/release-111/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz


Takes seq IDs and FASTA sequences and puts them into 2 seperate columns. 2 middle columns with forward (0-10) and reverse (0-4) are added in the middle to represent random expression values
    awk 'BEGIN{srand();} /^>/ {if (seq) {print seqid "\t" int(1 + rand() * 100) "\tPlaceholder2\t" seq}; seqid = $1; seq = ""; next} {seq = seq $1} END {print seqid "\t" int(1 + rand() * 100) "\tPlaceholder2\t" seq}' Homo_sapiens.GRCh38.cdna.all.fa > testfile.txt
    
Filter for longer reads
     awk 'BEGIN{OFS="\t"} { if (length($4) > 4000) print}' testfile.txt > len_testfile.txt
     
Randomly select 1000 different transcripts from the file
    shuf -n 1001 test_file.txt > sample_1001.transcript

Remove ">" from seq IDs
    awk '{sub(">", "", $0)}1' sample_1001.transcript > sample_1001.transcripttest
    mv sample_1001.transcripttest sample_1001.transcript

To Normally Distribute count Values:
    # Number of lines in the input file
    num_lines=$(wc -l < sample_1001.transcript)

    # Generate random values and fit them to a normal distribution
    awk -v n="$num_lines" 'BEGIN{srand()}
    {
        for_mean = 5
        rev_mean = 2
        for_stddev = 2
        rev_stddev = 1
        for (i = 1; i <= n; i++) {
            $2 = int(for_mean + for_stddev * sqrt(-2 * log(rand())) * cos(2 * 3.14159 * rand()))
            $3 = 0
        }
    }1' 6-8_sample_1000.transcript > 6-8_sample_1000.transcript_temp

    awk '{gsub(/ /,"\t")}1' 6-8_sample_1000.transcript_temp > 6-8_sample_1000.transcript

    rm norm_test.txt
